ReactNative Packager
--------------------

ReactNative Packager is a project similar in scope to browserify or
webpack, it provides a CommonJS-like module system, JavaScript
compilation (ES6, Flow, JSX), bundling, and asset loading.

The main differentiator is the Packager's focus on compilation and
bundling speed. We want aim for a sub-second edit-reload
cycles. Additionally, we don't want users -- with large code bases
-- to not wait more than a few seconds after starting the packager.

The main diviation from the node module system is the support for our
properiatary module format known as `@providesModule`. However, we
don't encourage people to use this module format because going
forward, we want to completely seperate our infrastructure from
ReactNative and provide an experience most JavaScript developers are
fimiliar with, namely the node module format. We want to even go
further, and let you choose your own packager and asset
pipeline or even integrate into your existing infractructure.

ReactNative users need not to understand how the packager work,
however, this documentation might be useful for advanced users and
people who want to fix bugs or add features to the packager (patches
welcome!).

## HTTP interface

The main way you'd interact with the packager is via the http
interface. The following is the list of endpoints and their respective
funcitons.

### /path/to/moduleName.bundle

This simply takes `path/to/moduleName`, adds a `.js` to the file and
tries to find it in the root(s) of your project, and then  will recursively
collect all it's dependencies transform (or get transformed code from
cache)
